def clamp(x, min_, max_):    return max(min_, min(x, max_))def solution(inp):    keypad_1 = {        -1-1j: '1', 0-1j: '2', 1-1j: '3',        -1+0j: '4', 0+0j: '5', 1+0j: '6',        -1+1j: '7', 0+1j: '8', 1+1j: '9',    }    keypad_2 = {                              2-2j: '1',                   1-1j: '2', 2-1j: '3', 3-1j: '4',        0+0j: '5', 1+0j: '6', 2+0j: '7', 3+0j: '8', 4+0j: '9',                   1+1j: 'A', 2+1j: 'B', 3+1j: 'C',                              2+2j: 'D'    }    directions = {'U': -1j, 'D': 1j, 'L': -1, 'R': 1}    position_1 = 0j    part1 = ''    position_2 = 0j    part2 = ''    for line in inp.splitlines():        for char in line:            direction = directions[char]            if (new := position_1 + direction) in keypad_1:                position_1 = new            if (new := position_2 + direction) in keypad_2:                position_2 = new        part1 += keypad_1[position_1]        part2 += keypad_2[position_2]    return part1, part2__all__ = (solution,)if __name__ == '__main__':    from aocd import data    part1, part2 = solution(data)    print(f"Part 1: {part1}\nPart 2: {part2}")